@model MVCMuncheese.Models.modeloOrdenes
@{
    ViewBag.Title = "Ordenes";
}

<div class="jumbotron">
    <div>
        <h3 class="container-fluid" style="text-align:center">Orden</h3>
    </div>
    <form class="form-horizontal">
        <script type="text/javascript">

          function enviarDetalleOrden() {
  var detalleOrden = [];
  $('#detalleOrden tr').each(function (index, element) {
    var detalle = {
      Id_Orden: /* Aquí debes poner el valor del Id_Orden */,
      Id_producto: $(this).find('.idProducto').text(),
      Nombre_producto: $(this).find('.nombreProducto').text(),
      Cantidad: $(this).find('.cantidad').text(),
      Mesa: $(this).find('.mesa').text(),
      Precio: $(this).find('.precio').text(),
      Tipo_orden: $(this).find('.tipoOrden').text(),
      Descripcion: $(this).find('.descripcion').text(),
      Tipo_Producto: $(this).find('.tipoProducto').text()
    };
    detalleOrden.push(detalle);
  });
  $.ajax({
    url: '@Url.Action("InsertarDetalleOrden", "Controlador")',
    type: 'POST',
    data: JSON.stringify(detalleOrden),
    contentType: 'application/json; charset=utf-8',
    dataType: 'json',
    success: function (data) {
      alert('Detalle de orden insertado correctamente');
    },
    error: function (xhr, status, error) {
      alert('Error al insertar el detalle de orden');
    }
  });
              // Redirigir al usuario a la vista Mesas
    window.location.href = '@Url.Action("Mesas", "Mesas")';
}

    @*// Redirigir al usuario a la vista Mesas
    window.location.href = '@Url.Action("Mesas", "Mesas")';*@



            function cargarProductos() {
                var tipoProducto = $("#Tipo_Producto").val();
                $.ajax({
                    url: '@Url.Action("obtenerProductosPorTipo", "Ordenes")',
                    type: 'GET',
                    dataType: 'json',
                    data: { idTipoProducto: tipoProducto },
                    success: function (data) {
                        var productos = "<option value=''>- Productos -</option>";
                        $.each(data, function (i, item) {
                            productos += "<option value='" + item.Id_producto + "'>" + item.Nombre + "</option>";
                        });
                        $("#Id_producto").html(productos).removeAttr("disabled");

                    },
                    error: function () {
                        alert("Ocurrió un error al cargar los productos");
                }
                    });
            }

                    function cargarPrecio() {
            var producto = $("#Id_producto").val();
            if (producto != null && producto != "") {
                $.ajax({
                    url: '@Url.Action("obtenerPrecioPorProducto", "Ordenes")',
                    type: 'GET',
                    dataType: 'json',
                    data: { idProducto: producto },
                    success: function (data) {
                        $("#Precio").val(data);
                    },
                    error: function () {
                        alert("Ocurrió un error al cargar el precio");
                    }
                });
                }
            }

            function agregarFila() {
                // Obtener los valores del formulario
                var tipoProducto = $("#Tipo_Producto option:selected").text();
                var producto = $("#Id_producto option:selected").text();
                var precio = $("#Precio").val();
                var cantidad = $("#Cantidad").val();
                var tipoOrden = $("#TipoOrden").val();
                var mesa = $("#Mesa").val();
                var descipcion = $("#Descipcion").val();
                var subtotal = precio * cantidad;

                // Crear una fila con los valores
                var fila = "<tr>" +
                    "<td>" + tipoProducto + "</td>" +
                    "<td>" + producto + "</td>" +
                    "<td>" + precio + "</td>" +
                    "<td>" + cantidad + "</td>" +
                    "<td>" + tipoOrden + "</td>" +
                    "<td>" + mesa + "</td>" +
                    "<td>" + descipcion + "</td>" +
                    "<td>" + subtotal + "</td>" +
                    "</tr>";

                // Agregar la fila a la tabla
                $("#tablaOrdenes tbody").append(fila);

                // Limpiar el formulario
                $("#Tipo_Producto").val("");
                $("#Id_producto").val("");
                $("#Precio").val("");
                $("#Cantidad").val("");
                $("#TipoOrden").val();
                $("#Descipcion").val();
                $("#Mesa").val();
            }


            // Obtener las filas de la tabla de ordenes
        var filas = $("#tablaOrdenes tbody tr");

        // Recorrer las filas y agregar las órdenes a la base de datos
        filas.each(function () {
          // Obtener los datos de la fila
          var tipoProducto = $(this).find("td:eq(0)").text();
          var producto = $(this).find("td:eq(1)").text();
          var precio = $(this).find("td:eq(2)").text();
          var cantidad = $(this).find("td:eq(3)").text();
          var tipoOrden = $(this).find("td:eq(4)").text();
          var mesa = $(this).find("td:eq(5)").text();
          var descripcion = $(this).find("td:eq(6)").text();
          var subtotal = $(this).find("td:eq(7)").text();

          // Llamar al método para agregar la orden a la base de datos
          $.ajax({
            url: '@Url.Action("insertarOrde_ENT", "Ordenes")',
            type: 'POST',
            dataType: 'json',
            data: {
              TipoProducto: tipoProducto,
              Producto: producto,
              Precio: precio,
              Cantidad: cantidad,
              TipoOrden: tipoOrden,
              Mesa: mesa,
              Descripcion: descripcion,
              Subtotal: subtotal
            },
            success: function (data) {
              console.log("Orden agregada a la base de datos.");
            },
            error: function () {
              console.log("Ocurrió un error al agregar la orden a la base de datos.");
            }
          });
        });


        </script>


        <fieldset>
            <div class="col-md-12">
                <div class="form-group col-md-12">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Id_Orden, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Id_Orden, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Id_Orden, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Tipo_Producto, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownListFor(model => model.Tipo_Producto, ViewBag.Tipo_Producto as SelectList, "- Categoria -", new
                   {
                            @id = "Tipo_Producto",
                       @onchange = "cargarProductos();",
                       @class = "form-control"
                   })
                        @Html.ValidationMessageFor(model => model.Tipo_Producto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Id_producto, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownListFor(model => model.Id_producto, new SelectList(string.Empty, "Id_producto", "Nombre"), "- Productos -", new { @id = "Id_producto", @disabled = "disabled", @class = "form-control", @onChange = "cargarPrecio();" })
                        @Html.ValidationMessageFor(model => model.Id_producto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control", min = "0", max = "10" } })
                        @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group col-md-4">
                    <div class="col-lg-10">
                        <label>Tipo de Orden</label>
                        <select class="form-control" id="TipoOrden">
                            <option value=""></option>
                            <option value="Para llevar">Para llevar</option>
                            <option value="Comer aquí">Comer aquí</option>
                        </select>
                    </div>
                </div>

                <div class="form-group col-md-4">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Mesa, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Mesa, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mesa, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Descipcion, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Descipcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descipcion, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-lg-12">
                <div class="form-group col-md-4">
                    <div class="col-lg-10 col-lg-offset-2">
                        <button type="reset" class="btn btn-primary">Cancelar</button>
                        <button type="button" class="btn btn-primary" onclick="agregarFila();">Agregar</button>
                    </div>
                    @*<div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-default" onclick="agregarFila();">Agregar</button>
                        </div>
                    </div>*@
                </div>
            </div>
        </fieldset>
    </form> 
</div>



<table class="table" id="tablaOrdenes">
    <thead>
        <tr>
            <th>Tipo de Producto</th>
            <th>Producto</th>
            <th>Precio</th>
            <th>Cantidad</th>
            <th>Tipo de Orden</th>
            <th>Mesa</th>
            <th>Descripcion</th>
            <th>Subtotal</th>
        </tr>
    </thead>
    <tbody id="detalleOrden">
    </tbody>
</table>


<div class="form-group col-md-12" style="text-align:right">
    <div class="col-lg-10 col-lg-offset-2">
        <button type="button" class="btn btn-primary" id="finalizar-btn" onclick="enviarDetalleOrden()">Finalizar</button>
        <div class="btn btn-primary">@Html.ActionLink("Atras", "Mesas", "Mesas", null, new { style = "color:white;" })</div>
    </div>
</div>
