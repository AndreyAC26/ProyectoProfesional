@model MVCMuncheese.Models.modeloFacturas

@{
    ViewBag.Title = "Factura";

}


<div>
    <h3 style="text-align:center;">
        Factura
    </h3>
</div>

@using (Html.BeginForm("accionesPA", "Facturas", FormMethod.Post, new { onsubmit = "return validarFormulario();" }))
{
    <nav class="navbar navbar-default" style="padding-top:10px; display: flex; justify-content: space-between;">
        <div class="row">
            <div class="col-md-12" id="contenedor1">
                <h4 class="info" style="font-size:12px; text-align:center;"> Muncheese Comida callejera </h4>
                <h4 class="info" style="font-size:10px; text-align:center;"> Sarchí Centro Comercial Valverde Vega </h4>
                <h4 class="info" style="font-size:10px; text-align:center;"> Local #19 o donde nos invitan con el FoodTruck, Alajuela, Costa Rica </h4>
            </div>


            <div class="col-md-12 text-right" id="contenedor2">

                <div class="col-md-3 text-right">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.mesa, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-6">
                            @Html.DropDownListFor(model => model.mesa, Model.MesasOcupadas, "-- Mesas --", new { @class = "form-control", id = "mesa-dropdown" })
                            @Html.ValidationMessageFor(model => model.mesa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Id_Orden, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-6">
                            @Html.DropDownListFor(model => model.Id_Orden, Enumerable.Empty<SelectListItem>(), "- Ordenes -", new { @class = "form-control", id = "ddlOrdenes" })
                            @Html.ValidationMessageFor(model => model.Id_Orden, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="col-md-3 text-right">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.fecha, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-7">
                            @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control form-control-lg", style = "height: 37px;", type = "date", @id = "fecha-entrada", value = "fechaActual" } })
                            @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-6">
                            @Html.DropDownListFor(model => model.Cliente, Model.Clientes, "Cliente", new { @class = "form-control", id = "ddlClientes" })
                            @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-3 text-lef">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Tel_Cliente, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                        <div class="col-sm-6 text-right">
                            @Html.EditorFor(model => model.Tel_Cliente, new { htmlAttributes = new { @class = "form-control", @id = "txtTelefono", @style = "display:none;" } })
                            @Html.ValidationMessageFor(model => model.Tel_Cliente, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>


    <div class="col-md-12" style="text-align:center;">
        <table class="table table-striped table-hover" id="tablaDetalleOrdenes">
            <thead>
                <tr>
                    <th></th>
                    <th>Num. Orden</th>
                    <th>Producto</th>
                    <th>Cantidad</th>
                    <th>Mesa</th>
                    <th>Precio</th>
                    <th>Tipo de Orden</th>
                    <th>Descripcion</th>
                    <th>Sub Total</th>
                </tr>
            </thead>
            <tbody id="detalleOrden">
            </tbody>
        </table>

        <div class="form-group col-md-12" style="text-align:right">
            <div class="col-lg-10 col-lg-offset-2">
                <button type="submit" class="btn btn-primary" id="facturar-btn" data-url='@Url.Action("Facturar", "Facturas")'>Finalizar</button>
            </div>
        </div>
    </div>
    @Html.ActionLink(" ", "Index", "Home", null, new { id = "home-link" })

}


@Html.ActionLink(" ", "Index", "Home", null, new { id = "home-link" })

@*// ************************************************ //*@

@section Scripts {
    <script type="text/javascript">

        $(function () {
            // Manejar el evento de selección del dropdownlist "Clientes"
            $("#ddlClientes").change(function () {
                var selectedCliente = $(this).val(); // Obtener el cliente seleccionado
                if (selectedCliente !== "") {
                    // Obtener el número de teléfono del cliente seleccionado mediante una petición AJAX
                    $.ajax({
                        url: '@Url.Action("ObtenerTelefonoCliente", "Facturas")',
                        type: 'GET',
                        dataType: 'json',
                        data: { cliente: selectedCliente }, // Enviar el nombre del cliente seleccionado como parámetro
                        success: function (telefono) {
                            // Asignar el número de teléfono al campo correspondiente
                            $("#txtTelefono").val(telefono);
                            $("#txtTelefono").show(); // Mostrar el campo de texto
                        },
                        error: function () {
                            console.log('Error al obtener el número de teléfono del cliente.');
                        }
                    });
                } else {
                    $("#txtTelefono").val(''); // Limpiar el campo si no hay cliente seleccionado
                    $("#txtTelefono").hide(); // Ocultar el campo de texto
                }
            });
        });


        /* ************************************************ */
        $(function () {
    // Manejar el evento de selección del dropdownlist "Id_Orden"
    $("#ddlOrdenes").change(function () {
        var selectedOrden = $(this).val(); // Obtener la orden seleccionada
        if (selectedOrden !== "") {
            // Obtener los detalles de la orden seleccionada mediante una petición AJAX
            $.ajax({
                url: '@Url.Action("CargarDetalleOrdenes", "Facturas")',
                type: 'GET',
                dataType: 'html',
                data: { idOrden: selectedOrden }, // Enviar el Id_Orden seleccionado como parámetro
                success: function (html) {
                    // Actualizar el contenido del contenedor "detalleOrden" con los detalles de la orden
                    $("#detalleOrden").html(html);
                },
                error: function () {
                    console.log('Error al obtener los detalles de la orden.');
                }
            });
        } else {
            // Limpiar el contenido del contenedor si no hay orden seleccionada
            $("#detalleOrden").html("");
        }
    });
});

        /* ************************************************ */

        //Cargar fecha actual
        $(document).ready(function () {
            var fechaActual = new Date();
            var dia = fechaActual.getDate();
            var mes = fechaActual.getMonth() + 1;
            var anio = fechaActual.getFullYear();
            if (dia < 10) {
                dia = "0" + dia;
            }
            if (mes < 10) {
                mes = "0" + mes;
            }
            var fechaActualTexto = anio + "-" + mes + "-" + dia;
            $("#fecha-entrada").val(fechaActualTexto);
        });


        /* ************************************************ */
        // carga las ordenes por las mesas
        $(document).ready(function () {
    $('#mesa-dropdown').change(function () {
        var mesaId = parseInt($(this).val());

        if (mesaId) {
            var ordenesPorMesa = JSON.parse('@Html.Raw(Model.OrdenesPorMesaJson)');
            var ordenesDeMesa = ordenesPorMesa[mesaId] || [];

            var $ordenDropdown = $('#ddlOrdenes');
            $ordenDropdown.empty();
            $ordenDropdown.append($('<option>', { value: "", text: "-- Ordenes --" }));

            $.each(ordenesDeMesa, function (index, item) {
                $ordenDropdown.append($('<option>', { value: item.Value, text: item.Text }));
            });
        }
    });
        });


        //carga los detalles de las ordenes
            $(document).ready(function () {
                $("#ddlOrdenes").on("change", function () {
                    var idOrden = $(this).val();

                    if (idOrden != "") {
                        $.ajax({
                            type: "GET",
                            url: "/Facturas/CargarDetalleOrdenes",
                            data: { idOrden: idOrden },
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data) {
                                console.log(data);
                                var detallesOrden = data;
                                var html = "";
                                var total = 0; // Paso 1: Declara e inicializa la variable total

                                for (var i = 0; i < detallesOrden.length; i++) {
                                    var detalle = detallesOrden[i];
                                    var subtotal = detalle.Precio * detalle.Cantidad;
                                    total += subtotal; // Paso 2: Suma el subtotal al total
                                    html += "<tr>";
                                    html += "<td></td>";
                                    html += "<td>" + detalle.Id_Orden + "</td>";
                                    html += "<td>" + detalle.Nombre + "</td>";
                                    html += "<td>" + detalle.Cantidad + "</td>";
                                    html += "<td>" + detalle.Mesa + "</td>";
                                    html += "<td>" + detalle.Precio + "</td>";
                                    html += "<td>" + detalle.Tipo_orden + "</td>";
                                    html += "<td>" + detalle.Descripcion + "</td>";
                                    html += "<td>" + subtotal + "</td>";
                                    html += "</tr>";
                                }

                                // Paso 3: Crear una fila adicional con la etiqueta "Total" y el valor de la variable total
                                html += "<tr>";
                                html += "<td colspan='8' style='text-align: right; font-weight: bold;'>Total</td>";
                                html += "<td style='font-weight: bold;'>" + total + "</td>";
                                html += "</tr>";

                                // Actualizar el contenido del contenedor "detalleOrden" con los detalles de la orden
                                $("#detalleOrden").html(html);
                            },
                            error: function (error) {
                                console.log(error);
                            }
                        });
                    } else {
                        $("#detalleOrden").html("");
                    }
                });
            });

        //Facturar
            @*$(document).ready(function () {
                $("#facturar-btn").click(function (e) {
                    e.preventDefault();

                    var fecha = $("#fecha-entrada").val();
                    var orden = $("#ddlOrdenes").val();
                    var telefono = $("#txtTelefono").val();
                    var url = $(this).data("url");

                    var idMesa = $("#ddlOrdenes").val();
                    var idOrden = $("#mesa-dropdown").val();

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("accionesPA", "Facturas")',
                        data: {
                            enviarAccion: "Agregar",
                            pModeloFacturas: {
                                fecha: fecha,
                                Id_Orden: orden,
                                Tel_Cliente: telefono
                            }
                        },
                        success: function (response) {
                            // Redireccionar a la página principal sin verificar la respuesta
                            window.location.href = $("#home-link").attr("href");
                        },
                        error: function (response) {
                            // Manejar errores (mostrar un mensaje, etc.)
                        }
                    });
                });
            });*@
        $(document).ready(function () {
    $("#facturar-btn").click(function (e) {
        e.preventDefault();

        var fecha = $("#fecha-entrada").val();
        var orden = $("#ddlOrdenes").val();
        var telefono = $("#txtTelefono").val();
        var facturarUrl = $(this).data("url");

        // Obtenemos los valores de idMesa e idOrden para pasar a la acción Facturar
        var idMesa = $("#ddlOrdenes").val();
        var idOrden = $("#mesa-dropdown").val();
        // Obtener el nombre de la mesa seleccionada
        var nombreMesa = $("#mesa-dropdown option:selected").text();

        $.ajax({
            type: "POST",
            url: '@Url.Action("accionesPA", "Facturas")',
            data: {
                enviarAccion: "Agregar",
                pModeloFacturas: {
                    fecha: fecha,
                    Id_Orden: orden,
                    Tel_Cliente: telefono
                }
            },
            success: function (response) {
                // Realizar la segunda llamada AJAX para invocar la acción Facturar
                $.ajax({
                    type: "POST",
                    url: facturarUrl,
                    data: {
                        idMesa: idMesa,
                        idOrden: idOrden
                    },
                    success: function (response) {
                        // Redireccionar a la página principal sin verificar la respuesta
                        window.location.href = $("#home-link").attr("href");
                    },
                    error: function (response) {
                        // Manejar errores (mostrar un mensaje, etc.)
                    }
                });
            },
            error: function (response) {
                // Manejar errores (mostrar un mensaje, etc.)
            }
        });
    });
});



            //Validaciones del formulario
            function validarFormulario() {
                var fecha = document.getElementById("fecha-entrada").value;
                var orden = document.getElementById("ddlOrdenes").value;
                var telefono = document.getElementById("txtTelefono").value;

                // Validar fecha
                if (fecha === "" || !isValidDate(fecha)) {
                    alert("Por favor, ingrese una fecha válida.");
                    return false;
                }

                // Validar orden
                if (orden === "") {
                    alert("Por favor, seleccione una orden.");
                    return false;
                }

                // Validar teléfono
                if (telefono === "" || !isValidPhoneNumber(telefono)) {
                    alert("Por favor, ingrese un número de teléfono válido.");
                    return false;
                }

                return true; // Devuelve true para permitir que el formulario se envíe
            }

            function isValidDate(dateString) {
                var date = new Date(dateString);
                return !isNaN(date.getTime());
            }

            function isValidPhoneNumber(phoneNumber) {
                // Esta es una expresión regular simple para validar números de teléfono, puedes adaptarla según tus necesidades
                var phoneRegex = /^\d{10}$/;
                return phoneRegex.test(phoneNumber);
            }
    </script>
}

